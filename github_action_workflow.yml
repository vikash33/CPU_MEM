name: Monitor VMs

on:
  workflow_dispatch:
    inputs:
      vm_list:
        description: 'Comma-separated list of VM IPs or hostnames'
        required: true
        default: '192.168.1.101,192.168.1.102'
      check_type:
        description: 'What to check: cpu, mem, or both'
        required: true
        default: 'both'

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Add VM IPs to known_hosts to avoid SSH prompt
          for ip in $(echo "${{ github.event.inputs.vm_list }}" | tr ',' '\n'); do
            ssh-keyscan -H $ip >> ~/.ssh/known_hosts
          done

      - name: Generate dynamic inventory
        run: |
          echo "[all]" > ansible/inventory.ini
          for ip in $(echo "${{ github.event.inputs.vm_list }}" | tr ',' '\n'); do
            echo "$ip ansible_host=$ip" >> ansible/inventory.ini
          done
          echo "[all:vars]" >> ansible/inventory.ini
          echo "ansible_user=${{ secrets.SSH_USER }}" >> ansible/inventory.ini
          echo "ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini

      - name: Run Ansible Playbook
        run: |
          cd ansible
          ansible-playbook run_check.yml -i inventory.ini --extra-vars "check_type=${{ github.event.inputs.check_type }}"
